<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="BorrowTender">
	<select id="queryBorrowTenderList" resultType ="com.qmd.mode.borrow.BorrowTender" parameterType = "java.lang.Integer">
		select d.*,
		u.username
		from
		fy_borrow_detail d left join fy_user u on d.user_id = u.id
		where borrow_id =#{borrow_id} order by id desc;
	</select>
	<select id="queryBorrowTenderById" resultType ="com.qmd.mode.borrow.BorrowTender" parameterType = "java.lang.Integer">
		select d.*
		from fy_borrow_detail d 
		where d.id =#{borrowDetailId}
	</select>
	<insert id="insert" parameterType = "com.qmd.mode.borrow.BorrowTender" useGeneratedKeys="true" keyProperty="id" >
		insert into
		fy_borrow_detail(
			user_id,
			status,
			borrow_id,
			invest_apr,
			money,
			account,
			repayment_account,
			interest,
			repayment_yesaccount,
			wait_account,
			repayment_yesinterest,
			wait_interest,
			add_persion,
			operator_ip,
			create_date,
			modify_date,
			able_amount,
			continue_amount,
			taste_amount,
			direct_amount,
			tiexi_fee,
			zqzr_status
		)values(
			#{userId},
			#{status},
			#{borrowId},
			#{investApr},
			#{money},
			#{account},
			#{repaymentAccount},
			#{interest},
			#{repaymentYesaccount},
			#{waitAccount},
			#{repaymentYesinterest},
			#{waitInterest},
			#{addPersion},
			#{operatorIp},
			now(),
			now(),
			#{ableAmount},
			#{continueAmount},
			#{tasteAmount},
			#{directAmount},
			#{tiexiFee},
			0
		)
	</insert>
	
	<update id="upateBorrowDetail" parameterType="java.util.Map" >
		update 
			fy_borrow_detail 
		set
			repayment_yesaccount=#{repaymentYesaccount},
			wait_account=#{waitAccount},
			repayment_yesinterest=#{repaymentYesinterest},
			wait_interest=#{waitInterest},
			operator_ip=#{operatorIp} 
		where id=#{id}
		
	</update>
	
	<update id="upateBorrowDetailAgile" parameterType="java.util.Map" >
		update 
			fy_borrow_detail 
		set
			 agile_money=#{agileMoney}
			,agile_final_date=#{agileFinalDate}
			,agile_status=#{agileStatus}
		where id=#{id}
	</update>
	
	
	<!-- 查询用户投标总额  -->
	<select id="selectAllAccountByUserid" resultType ="double" parameterType = "java.util.Map">
		select
			 sum(account) 
		from 
			fy_borrow_detail
	    where 
	    	1=1
	    	<if test="userId != null and userId !=''">
	    		and user_id=#{userId}
	    	</if>
	    	<if test="minDate!=null and maxDate!=null"> 
	　　　　　and　create_date between #{minDate} and #{maxDate} 
	　　　　</if>
			<if test="borrowId != null and borrowId !=''">
				and borrow_id = #{borrowId}
			</if>
	</select>
	
	<select id="selectAllTiexiFeeByUserid" resultType ="double" parameterType = "java.util.Map">
		select
			 sum(tiexi_fee) 
		from 
			fy_borrow_detail
	    where 
	    	1=1
	    	<if test="userId != null and userId !=''">
	    		and user_id=#{userId}
	    	</if>
	    	<if test="minDate!=null and maxDate!=null"> 
	　　　　　and　create_date between #{minDate} and #{maxDate} 
	　　　　</if>
			<if test="borrowId != null and borrowId !=''">
				and borrow_id = #{borrowId}
			</if>
	</select>
	
	<!-- 查询用户投标明细 -->
	<select id="getTenderDetailByUserid" resultType ="com.qmd.mode.borrow.BorrowTender" parameterType = "java.util.Map">
		select
			q1.id as id,
			q1.borrow_id as borrowId,
			q1.user_id as userId,
			q3.username as name,
			q2.name as title,
			q2.account as borrowAccount,
			q1.create_time as createTime,
			q1.create_date as repaymentDate,
			q1.account as loanAmountFee,
			q1.repayment_account as totalIncomeFee,
			q1.repayment_yesaccount as totalReceivedFee,
			q1.wait_account as collectAmountFee,
			q1.repayment_yesinterest as receivedInterestFee,
			q1.wait_interest as collectInterestFee,
			q1.invest_apr as investApr,
			q2.apr as apr,
			q2.status as status,
			q2.time_limit as timeLimit,
			q2.type as type,
			q2.status as bStatus,
			q2.business_code as businessCode,
			q1.able_amount as ableAmount,
			q1.continue_amount as continueAmount,
			q2.end_time as borrowEndTime,
			q2.verify_time as borrowVerifyTime,
			q2.valid_Time as borrowValidTime,
			q2.balance as borrowBalance,
			q2.wander_piece_money as borrowWanderPieceMoney,
			q1.tiexi_fee as tiexiFee,
			q2.is_assign as bisAssign
		from 
			fy_borrow_detail q1
			left join fy_borrow q2 on q1.borrow_id = q2.id
			left join fy_user q3 on q2.user_id = q3.id
	    where 
	    	q1.user_id=#{userId}
	    	<if test="minDate != null">
				<![CDATA[and q1.create_date >= #{minDate}]]>
			</if>
			<if test="maxDate != null">
				<![CDATA[and q1.create_date <= #{maxDate}]]>
			</if>
	    	<if test="keywords!=null">
	    		<![CDATA[and q2.name like '%${keywords}%']]>
	    	</if>
	    	<if test="status!=null">
	    		and q2.status = #{status}
	    	</if>
	    		<if test="backStatus!=null">
	    		and q1.back_status = #{backStatus}
	    	</if>
	    		order by q1.create_date desc
			<if test="pager != null">
				limit #{pager.thisSize},#{pager.pageSize}
			</if>
	</select>
	
	<select id="queryTenderDetailList" resultType ="java.lang.Integer" parameterType = "java.util.Map">
		select 
			count(*) 
		from 
			fy_borrow_detail q1
			left join fy_borrow q2 on q1.borrow_id = q2.id
		where
			q1.user_id=#{userId}
			<if test="keywords!=null">
	    		<![CDATA[and q2.name like '%${keywords}%']]>
	    	</if>
	    	<if test="status!=null">
	    		and q2.status = #{status}
	    	</if>
	    	<if test="tenderSubject!=null">
	    		and q2.tender_subject = #{tenderSubject}
	    	</if>
	    	<if test="minDate != null">
				<![CDATA[and q1.create_date >= #{minDate}]]>
			</if>
			<if test="maxDate != null">
				<![CDATA[and q1.create_date <= #{maxDate}]]>
			</if>
			<if test="noBusinessType != null">
				<![CDATA[and q2.business_type <> #{noBusinessType}]]>
			</if>
			<if test="noBorrowId != null">
				<![CDATA[and q1.borrow_id <> #{noBorrowId}]]>
			</if>
			<if test="noInBorrow != null">
				<![CDATA[and q2.business_type != #{noInBorrow} and DATE_ADD(q2.`create_date`,INTERVAL  q2.valid_time DAY) >NOW()]]>
			</if>
	</select>
	
	<!-- 借款人-借款明细 -->
	<select id="getJkmxUserid" resultType ="com.qmd.mode.borrow.BorrowTemp" parameterType = "java.util.Map">
		select
			q1.id as id,
			q1.borrow_id as borrowId,
			q1.user_id as userId,
			q3.username as name,
			q2.name as title,
			q1.create_date as repaymentDate,
			q1.account as loanAmountFee,
			q1.repayment_account as totalIncomeFee,
			q1.repayment_yesaccount as totalReceivedFee,
			q1.wait_account as collectAmountFee,
			q1.repayment_yesinterest as receivedInterestFee,
			q1.wait_interest as collectInterestFee,
			q1.able_amount as ableAmount,
			q1.continue_amount as continueAmount,
			q1.invest_apr as apr,
			q1.borrow_agile_id as borrowAgileId,
			q1.agile_flg as agileFlg,
			q1.agile_status as agileStatus,
			q1.agile_code as agileCode,
			q1.agile_money as agileMoney,
			q1.agile_period_yesinterest as agilePeriodYesinterest,
			q1.agile_step_intdate as agileStepIntdate,
			q1.agile_yesinterest as agileYesinterest,
			q1.agile_open_date as agileOpenDate,
			q1.agile_final_date as agileFinalDate,
			q1.late_days as lateDays,
			q1.late_status as lateStatus,
			q1.late_penalty as latePenalty,
			q1.late_account as lateAccount,
			q1.late_account_paid as lateAccountPaid
		from 
			fy_borrow_detail q1
			left join fy_borrow q2 on q1.borrow_id = q2.id
			left join fy_user q3 on q1.user_id = q3.id
	    where 
	    	q2.user_id=#{userId}  
	    	<if test = "status != null">
				and  q2.status in 
				<foreach item="item" index="index" collection="status"
	      			open="(" separator="," close=")">
	       	 		#{item}
	  			</foreach>
  			</if>
			
	    	<if test = "borrowId != null">and q1.borrow_id=#{borrowId}</if>
	    	<if test="minDate!=null and maxDate!=null">
	    		and (q1.create_date between #{minDate} and #{maxDate})
			</if>
			<if test="deferStatus != null">
	    		and q1.defer_status = #{deferStatus}
			</if>
			<if test="lateStatus != null">
	    		and q1.late_status = #{lateStatus}
			</if>
			
			
			order by q1.create_date desc
		<if test="pager != null">
			limit #{pager.thisSize},#{pager.pageSize}
		</if>
	</select>
	
	<select id="queryJkmxList" resultType ="java.lang.Integer" parameterType = "java.util.Map">
		select 
			count(*) 
		from 
			fy_borrow_detail q1 
			left join fy_borrow q2 on q1.borrow_id = q2.id
			left join fy_user q3 on q2.user_id = q3.id
		where
			q2.user_id=#{userId} 
			<if test = "status != null">
			and  q2.status in 
			<foreach item="item" index="index" collection="status"
      			open="(" separator="," close=")">
       	 		#{item}
  			</foreach>
  			</if>
			<if test = "borrowId != null">
	    		and q1.borrow_id=#{borrowId}
	    	</if>
			<if test="minDate!=null and maxDate!=null">
				and (q1.create_date between #{minDate} and #{maxDate})
			</if>
	</select>
	
	
	
	
	<select id="baseLoad" resultType ="com.qmd.mode.borrow.BorrowTender" parameterType = "java.lang.Integer">
		select 
			b.*
		from fy_borrow_detail b
			where b.id =#{id}
	</select>
	
	
	<!-- 查询我要转让 -->
	<select id="getZqzrByUserid" resultType ="com.qmd.mode.borrow.BorrowTemp" parameterType = "java.util.Map">
		select
			q1.id as id,
			q1.borrow_id as borrowId,
			q1.user_id as userId,
			q2.name as title,
			q2.account as borrowAccount,
			q1.account as loanAmountFee,
			q1.repayment_account as totalIncomeFee,
			q1.repayment_yesaccount as totalReceivedFee,
			q1.wait_account as collectAmountFee,
			q1.repayment_yesinterest as receivedInterestFee,
			q1.wait_interest as collectInterestFee,
			q1.invest_apr as investApr,
			q2.apr as apr,
			q2.status as status,
			q2.time_limit as timeLimit,
			q2.type as type,
			q2.status as bStatus,
			q2.business_code as businessCode,
			q1.able_amount as ableAmount,
			q1.continue_amount as continueAmount,
			q2.end_time as borrowEndTime,
			q2.verify_time as borrowVerifyTime,
			q2.valid_Time as borrowValidTime,
			q2.balance as borrowBalance,
			q2.wander_piece_money as borrowWanderPieceMoney,
			(SELECT COUNT(*) FROM fy_user_repayment_detail urd WHERE urd.user_id = q1.user_id AND urd.borrow_detail_id = q1.id AND urd.status = 0) as divides,
			(SELECT MAX(furd.repayment_date) FROM fy_user_repayment_detail furd WHERE furd.user_id = q1.user_id AND furd.borrow_detail_id = q1.id AND furd.status = 0) as repaymentDate
		from 
			fy_borrow_detail q1
			left join fy_borrow q2 on q1.borrow_id = q2.id
			left join fy_user q3 on q2.user_id = q3.id
	    where 
	    	q1.user_id=#{userId}
			<if test="noInBorrow != null">
				<![CDATA[and q2.business_type != #{noInBorrow} and DATE_ADD(q2.`create_date`,INTERVAL  q2.valid_time DAY) >NOW()]]>
			</if>
	    	<if test="minDate != null">
				<![CDATA[and q1.create_date >= #{minDate}]]>
			</if>
			<if test="maxDate != null">
				<![CDATA[and q1.create_date <= #{maxDate}]]>
			</if>
	    	<if test="keywords!=null">
	    		<![CDATA[and q2.name like '%${keywords}%']]>
	    	</if>
	    	<if test="status!=null">
	    		and q2.status = #{status}
	    	</if>
	    	<if test="backStatus!=null">
	    		and q1.back_status = #{backStatus}
	    	</if>
	    	<if test="borrowDetailId!=null">
	    		and q1.id = #{borrowDetailId}
	    	</if>
	    		order by q1.create_date desc
			<if test="pager != null">
				limit #{pager.thisSize},#{pager.pageSize}
			</if>
	</select>
	
	<select id="querySumTenderMoney" resultType ="bigDecimal" parameterType = "java.util.Map">
		select 
			sum(d.account)
		from fy_borrow_detail d,fy_borrow b
		where 
			d.borrow_id=b.id
			and d.user_id = #{userId}
			<![CDATA[ and b.business_type<>'99' ]]>
			<![CDATA[ and d.create_date >= #{beginDate}]]>
	</select>

	<update id="baseUpdate" parameterType="com.qmd.mode.borrow.BorrowTender" >
		update 
			fy_borrow_detail
		set
			<if test ="zqzrStatus != null"> zqzr_status = #{zqzrStatus},</if>
			<if test ="deferStatus != null"> defer_status = #{deferStatus},</if>
			
			<if test ="lateStatus != null"> late_status = #{lateStatus},</if>
			<if test ="latePenalty != null"> late_penalty = #{latePenalty},</if>
			<if test ="lateDays != null"> late_days = #{lateDays},</if>
			
			modify_date = now()
		where id = #{id}
	</update>
	
		<update id="updateBorrowTemp" parameterType="com.qmd.mode.borrow.BorrowTemp" >
		update 
			fy_borrow_detail
		set
			<if test ="lateStatus != null"> late_status = #{lateStatus},</if>
			<if test ="latePenalty != null"> late_penalty = #{latePenalty},</if>
			<if test ="lateAccount != null"> late_account = #{lateAccount},</if>
			<if test ="lateAccountPaid != null"> late_account_paid = #{lateAccountPaid},</if>
			modify_date = now()
		where id = #{id}
	</update>
		
	<select id="getForUpdate" resultType ="com.qmd.mode.borrow.BorrowTender" parameterType = "java.lang.Integer">
		select * from fy_borrow_detail where id = #{id} for update
	</select>
	
	<select id="queryTenderCount" resultType ="java.lang.Integer" parameterType = "java.util.Map">
		SELECT COUNT(d.id) 
		FROM fy_borrow_detail d 
		LEFT JOIN fy_borrow b ON d.borrow_id = b.id WHERE b.business_type <![CDATA[<>]]> '99'
		AND d.user_id = #{userId} 
		AND b.status IN (1,3,5,7)
		<if test="outId!=null">
	    		and d.id <![CDATA[ <> ]]> #{outId}
	    </if>
	</select>
	<!-- 展期管理 -->
	<select id="queryZqListCount" resultType ="java.lang.Integer" parameterType = "java.util.Map">
		select 
			count(*) 
		from 
			fy_borrow_detail q1
			left join fy_borrow q2 on q1.borrow_id = q2.id
			left join fy_borrow q3 on q2.defer_id = q3.id
		<include refid="queryWhere"/>
	</select>
	
	<select id="queryZqList" resultType ="com.qmd.mode.borrow.BorrowTender" parameterType = "java.util.Map">
		select
			q1.*,
			q2.name as name,
			q2.business_code as businessCode,
			q2.account as borrowAccount,
			q2.time_limit as timeLimit,
			q2.final_repay_date as repaymentDate,
			q3.id as zqbid,
			q3.name as zqName,
			q3.time_limit as zqTimeLimit,
			q3.defer_rate as deferRate,
			q3.defer_time as deferTime,
			q3.business_code as zqBusinessCode,
			q3.defer_status as zqStatus
		from 
			fy_borrow_detail q1
			left join fy_borrow q2 on q1.borrow_id = q2.id
			left join fy_borrow q3 on q2.defer_id = q3.id
		<include refid="queryWhere"/>
		<include refid="queryOrder"/>
		<include refid="queryLimit"/>
	</select>
	
	
	<sql id="queryWhere">
		<where> 
		
		<if test="userId != null">
			<![CDATA[and q1.user_id =#{userId}]]>
		</if>
		
		<!-- 原项目编号 -->
		<if test="keywordsCode != null and keywordsCode != '' ">
			<![CDATA[and q2.business_code like '%${keywordsCode}%']]>
		</if>
		<!-- 展期项目编号 -->
		<if test="keywordsCodeZq != null and keywordsCodeZq != '' ">
			<![CDATA[and q3.business_code like '%${keywordsCodeZq}%']]>
		</if>
		
		<if test="array != null">
			and q2.status in 
			<foreach item="item" index="index" collection="array"
      			open="(" separator="," close=")">
       	 		#{item}
  			</foreach>
		</if>
		<if test="deferStatusArray != null">
			and q3.defer_status in 
			<foreach item="item" index="index" collection="deferStatusArray"
      			open="(" separator="," close=")">
       	 		#{item}
  			</foreach>
		</if>
		
		<if test="bdDeferStatus != null">
			and q1.defer_status = #{bdDeferStatus}
		</if>
		
		<if test="zqzrStatus != null">
			and q1.zqzr_status = #{zqzrStatus}
		</if>
		
		<if test="deferIdIsNotNull != null">
			<![CDATA[and q2.defer_id is not null ]]>
		</if>
		<if test="nowDate != null">
			<![CDATA[and q2.final_repay_date > #{nowDate}]]>
		</if>
		<!-- 展期起始日期 -->
		<if test="minDeferTime != null">
			<![CDATA[and  q3.defer_time > #{minDeferTime} ]]>
		</if>
		
		<if test="maxDeferTime != null">
			<![CDATA[and  q3.defer_time <= #{maxDeferTime} ]]>
		</if>
		</where> 
	</sql>
	

	<sql id="queryOrder">
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</sql>

	<sql id="queryLimit">
		<if test="pageStart != null and pageSize != null">
			limit #{pageStart},#{pageSize}
		</if>
	</sql>
	
	
	
	<select id="queryDeferApplyNum" resultType ="integer" parameterType = "java.util.Map">
		SELECT 
		 count(bd.borrow_id)
		FROM
		  fy_borrow_detail bd 
		  LEFT JOIN fy_borrow b 
		    ON b.old_borrow_id = bd.`borrow_id` 
		WHERE bd.user_id = #{userId} and
			<![CDATA[b.defer_time > #{deferTime}]]>
			and bd.defer_status = 0 
		    AND b.defer_status = 1 
		GROUP BY bd.borrow_id ;
	</select>
	
	
	
</mapper>